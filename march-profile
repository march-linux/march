#!/bin/bash

depend_procedure core base

worker_intro () {
	inform "March installation may take a while. Have some coffee."
	sleep 5
}


worker_configure ()
{
	var_UI_TYPE="dia"
	ui_init
	var_GRUB_DEVICE="/dev/sda"
	var_PARTITIONS="/dev/sda 100:ext2:+ 512:swap *:ext4"
	var_BLOCKDATA="/dev/sda1 raw no_label ext2;yes;/boot;target;no_opts;no_label;no_params
/dev/sda2 raw no_label swap;yes;no_mountpoint;target;no_opts;no_label;no_params
/dev/sda3 raw no_label ext4;yes;/;target;no_opts;no_label;no_params"
}

worker_select_source ()
{
	var_PKG_SOURCE_TYPE="net"
	var_SYNC_URL="http://mirrors.kernel.org/archlinux/\$repo/os/\$arch"
}

worker_prepare_disks ()
{
	get_possible_fs
	echo "$var_PARTITIONS" > $TMP_PARTITIONS
	echo "$var_BLOCKDATA" > $TMP_BLOCKDEVICES
	process_disks       || die_error "Could not process_disks"
	if ! process_filesystems
	then
		show_warning 'Disk processing' "Could not process_filesystems"
		txt='also failed to execute properly'
		rollback_filesystems && txt='ended successfully'
		die_error "Something failed while processing the filesystem.  A rollback was executed, which $txt"
	fi
	inform "Partitions and filesystems made successfully"
}

worker_package_list ()
{
	var_TARGET_PACKAGES="$(grep -v ^# /march/packages.list)"
}


worker_install_packages ()
{
	target_prepare_pacman testing core extra community community-testing && installpkg
}

worker_configure_system () {
	# copy march config
	cp /etc/sudoers $var_TARGET_DIR/etc/
	cp /etc/pacman.d/mirrorlist $var_TARGET_DIR/etc/pacman.d/
	cp /etc/locale.gen $var_TARGET_DIR/etc/
	cp /etc/modprobe.d/modprobe.conf $var_TARGET_DIR/etc/modprobe.d/
	# setup rc.conf
	sed -i -e "s|^DAEMONS=.*|DAEMONS=(dbus networkmanager gdm avahi-daemon cupsd)|" $var_TARGET_DIR/etc/rc.conf
	# adduser and setup locale
	chroot $var_TARGET_DIR locale-gen
	chroot $var_TARGET_DIR usermod -p ZYCnDaw9NK8NI root
	chroot $var_TARGET_DIR useradd -m -p ZYCnDaw9NK8NI -g users -G audio,lp,network,optical,power,storage,video,wheel march
	inform "March configured successfully"
}


worker_set_clock ()
{
	copy_timezone_file
}


worker_install_bootloader ()
{
	get_grub_map || return 1
	grub-install $var_GRUB_DEVICE --root-directory=/mnt || return 1
	# check if we have a seperate bootdev (/boot)
	# ToDo: This is double-work, find a better place!
	# See comment in generate_grub_menulst and interactive_grub
	bootdev=$(mount | grep $var_TARGET_DIR/boot | cut -d' ' -f 1)
	generate_grub_menulst || return 1
}
