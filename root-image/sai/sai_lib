#!/bin/bash

say() {
	tput setaf 5
	echo ":: $1"
	tput sgr0
}

ask() {
	tput setaf 4
	echo -n "=> $1  "
	tput sgr0
	read ans
}

yell() {
	tput setaf 1
	echo "!! $1  (see the error message above)"
	tput sgr0
	exit
}

prepare_disks() {
	: > $FSTAB
	for line in $(cat $FS); do
		part=$(echo $line | cut -d : -f 1)
		lbl=$(echo $line | cut -d : -f 2)

		if [[ $lbl == swap ]]; then
			mkswap -L swap $part || yell "sai can't format $part as swap"
			swapon $part

			echo "/dev/disk/by-label/swap swap swap defaults 0 0" >> $FSTAB
		else
			if [[ $lbl == root ]]; then
				mp=/
			else
				mp=/$lbl
			fi
			mkfs.ext4 -L $lbl $part || yell "sai can't format $part as ext4"
			mkdir -p /mnt$mp
			mount -t ext4 $part /mnt$mp || yell "sai can't mount $part as $mp"

			echo "/dev/disk/by-label/$lbl $mp ext4 defaults 0 1" >> $FSTAB
		fi
	done
}

find_disks() {
	find /dev/ -name [hs]d[a-z] | cut -d / -f 3
}

find_parts() {
	find /dev/ -name [hs]d[a-z][0-9] | cut -d / -f 3
}

get_size() {
	fdisk -l $1 2>/dev/null | sed -n 2p | cut -d , -f 1 | cut -d ' ' -f 3,4
}

avail_disks() {
	for disk in $(find_disks); do
		echo "$disk: $(get_size /dev/$disk)"
	done
}

avail_parts() {
	for part in $(find_parts); do
		echo "$part: $(get_size /dev/$part)"
	done
}

ask_cfdisk() {
	while true; do
		tput rev
		avail_disks
		tput sgr0

		ask "select a disk to partition? (type 'no' to skip)"
		if [[ $ans == no ]]; then
			break
		fi
		cfdisk "/dev/$ans" || yell "sai can't find that device"
	done
}

ask_mkfs() {
	: > $FS
	tput rev
	avail_parts
	tput sgr0

	ask "select a partition for 'root'?"
	echo "/dev/$ans:root" >> $FS
	for mp in boot swap home; do
		ask "select a partition for '$mp'? (type 'no' if you don't need it)"
		if [[ $ans != no ]]; then
			echo "/dev/$ans:$mp" >> $FS
		fi
	done
}

# chroot_mount()
# prepares target system as a chroot
#
chroot_mount() {
	mkdir -p /mnt/sys /mnt/proc /mnt/dev
	mount -t sysfs sysfs /mnt/sys
	mount -t proc proc /mnt/proc
	mount -o bind /dev /mnt/dev
}

# chroot_umount()
# tears down chroot in target system
#
chroot_umount() {
	umount /mnt/sys /mnt/proc /mnt/dev
}

pacman_install() {
	mkdir -p /mnt/var/lib/pacman /mnt/var/cache/pacman/pkg
	chroot_mount
	while true; do
		pacman --root /mnt --cachedir /mnt/var/cache/pacman/pkg --noconfirm --needed \
		-Sy $(grep -v ^# /sai/packages.list)
		if [[ $? == 0 ]]; then
			break
		else
			ask "pacman has some problems. try again? (type 'no' to skip)"
			if [[ $ans == no ]]; then
				break
			fi
		fi
	done
	chroot_umount
}

generate_syslinux_menu() {
	sed -i -e "s|root=/dev/sda3|root=/dev/disk/by-label/root|g" $syslinuxmenu || yell "sai can't find the bootloader menu"
}
